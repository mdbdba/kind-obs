apiVersion: v1
kind: ConfigMap
metadata:
  name: edge-telemetry-collector-config
  namespace: telemetry
data:
  collector-config.yaml: |
    receivers:
      filelog:
        include:
          # Target the Grafana pods in the monitoring namespace
          - /var/log/pods/**/*.log
        exclude:
          - '*.gz'
        start_at: beginning
        include_file_path: true
        include_file_name: true
        operators:
          - type: json_parser
          
          # Extract Kubernetes metadata
          - type: regex_parser
            regex: '^/var/log/pods/(?P<namespace>[^_]+)_(?P<pod_name>[^_]+)_(?P<pod_uid>[^/]+)/(?P<container_name>[^/]+)/.*$'
            parse_from: attributes["log.file.path"]
            parse_to: attributes
          # Replace add_fields with label operator
          # Add source attribute using attribute_mapper
          - type: move
            from: body.msg
            to: body.message_original
            if: 'body.msg != nil'
          - type: add
            field: attributes.source
            value: grafana
          - type: add
            field: attributes.component
            value: monitoring
          - type: add
            field: attributes.topic
            value: grafana-logs




    processors:
      batch:
        timeout: 1s
        send_batch_size: 1024
      resource:
        attributes:
          - key: app
            value: grafana
            action: upsert
          - key: k8s.namespace.name
            from_attribute: namespace
            action: upsert
          - key: k8s.pod.name
            from_attribute: pod_name
            action: upsert
          - key: k8s.container.name
            from_attribute: container_name
            action: upsert
          - key: topic
            value: grafana-logs
            action: upsert
    
    
    exporters:
      otlp:
        # Send to the bufstream service in queuing namespace
        endpoint: kafka-kafka-brokers.queuing.svc:9092
        tls:
          insecure: true
        headers:
          # Adding topic in headers for bufstream
          "X-Topic": "grafana-logs"
    
    
    service:
      pipelines:
        logs:
          receivers: [filelog]
          processors: [batch, resource]
          exporters: [otlp]
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: edge-telemetry-collector
  namespace: telemetry
spec:
  selector:
    matchLabels:
      app: edge-telemetry-collector
  template:
    metadata:
      labels:
        app: edge-telemetry-collector
    spec:
      serviceAccountName: edge-telemetry-collector
      containers:
        - name: collector
          image: otel/opentelemetry-collector-contrib:latest
          args:
            - --config=/conf/collector-config.yaml
          volumeMounts:
            - name: config-volume
              mountPath: /conf
            - name: varlogpods
              mountPath: /var/log/pods
              readOnly: true
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
      volumes:
        - name: config-volume
          configMap:
            name: edge-telemetry-collector-config
        - name: varlogpods
          hostPath:
            path: /var/log/pods
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: edge-telemetry-collector
  namespace: telemetry
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: edge-telemetry-collector
rules:
  - apiGroups: [""]
    resources: ["pods", "namespaces"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: edge-telemetry-collector
subjects:
  - kind: ServiceAccount
    name: edge-telemetry-collector
    namespace: telemetry
roleRef:
  kind: ClusterRole
  name: edge-telemetry-collector
  apiGroup: rbac.authorization.k8s.io