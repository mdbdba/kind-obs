apiVersion: v1
kind: ConfigMap
metadata:
  name: inner-aggregator-collector-config
  namespace: telemetry
data:
  collector-config.yaml: |
    receivers:
      kafka:
        brokers: ["kafka-kafka-brokers.queuing.svc:9092"]
        topic: grafana-logs
        group_id: otel-collector-loki
        initial_offset: earliest
        encoding: otlp_proto
        protocol_version: 2.0.0

    processors:
      batch:
        timeout: 1s
        send_batch_size: 1024
      
  
      # You might want to add attributes or transform logs here
      # For example, you can add a source label for Loki
      # Add message attributes that show which topic it came from
      attributes:
        actions:
          - key: kafka.topic
            from_context: kafka.topic
            action: insert


    exporters:
      debug:
        verbosity: detailed


    service:
      pipelines:
        logs:
          receivers: [kafka]
          processors: [batch, attributes]
          exporters: [debug]

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inner-aggregator-collector
  namespace: telemetry
spec:
  replicas: 1  # Adjust based on your needs
  selector:
    matchLabels:
      app: inner-aggregator-collector
  template:
    metadata:
      labels:
        app: inner-aggregator-collector
    spec:
      containers:
        - name: collector
          image: otel/opentelemetry-collector-contrib:latest
          args:
            - --config=/conf/collector-config.yaml
          volumeMounts:
            - name: config-volume
              mountPath: /conf
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
            limits:
              cpu: 500m
              memory: 500Mi
      volumes:
        - name: config-volume
          configMap:
            name: inner-aggregator-collector-config